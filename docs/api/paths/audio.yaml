/audio/upload:
  post:
    tags:
      - Audio
    summary: Upload audio recording with auto-metadata detection
    description: |
      Upload an audio recording for baby cry analysis. The audio file will be 
      processed for machine learning analysis automatically.
      
      **ðŸŽµ NEW: AUTO-METADATA DETECTION!**
      - Duration is now **automatically detected** from the audio file
      - Sample rate, channels, and bitrate are auto-extracted
      - No more manual duration input needed!
      
      **ONLY 2 FIELDS REQUIRED:**
      - `audio`: Audio file (field name must be exactly "audio")
      - `babyId`: ID of the baby this recording belongs to
      
      **All other fields are completely optional!** 
      
      **Technical Requirements:**
      - Request must use `multipart/form-data` content type
      - Audio file field name must be exactly "audio" 
      - Maximum file size: 50MB
      - Maximum duration: 5 minutes (300 seconds)
      - **Supported formats: MP3, WAV, M4A, AAC, WebM, OGG, FLAC**
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            required: [audio, babyId]
            properties:
              audio:
                type: string
                format: binary
                description: "**REQUIRED** - Audio file with field name 'audio' (Duration will be auto-detected)"
              babyId:
                type: string
                example: "507f1f77bcf86cd799439011"
                description: "**REQUIRED** - ID of the baby this recording belongs to"
              recordingContext:
                type: string
                example: '{"timeOfDay":"evening","beforeFeeding":true,"notes":"Baby seemed hungry"}'
                description: "**OPTIONAL** - JSON string with recording context information"
              title:
                type: string
                maxLength: 100
                example: "Evening cry session"
                description: "**OPTIONAL** - Title for the recording (legacy support)"
              notes:
                type: string
                maxLength: 500
                example: "Baby was crying before bedtime, seemed tired"
                description: "**OPTIONAL** - Notes about the recording context (legacy support)"
              recordingDate:
                type: string
                format: date-time
                example: "2024-01-15T18:30:00.000Z"
                description: "**OPTIONAL** - When the recording was made (defaults to upload time)"
              duration:
                type: number
                minimum: 0.1
                maximum: 300
                example: 45.5
                description: "**DEPRECATED** - Duration will be auto-detected from audio file. Manual input ignored."
          encoding:
            audio:
              contentType: audio/wav, audio/mpeg, audio/mp4, audio/webm, audio/ogg, audio/flac
    responses:
      '201':
        description: Audio recording uploaded successfully with auto-detected metadata
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Audio recording uploaded successfully with auto-detected metadata and ML analysis queued"
                data:
                  type: object
                  properties:
                    recording:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "507f1f77bcf86cd799439011"
                        filename:
                          type: string
                          example: "audio-1672678123456-abc123.wav"
                        originalName:
                          type: string
                          example: "baby_cry_recording.wav"
                        fileSize:
                          type: integer
                          example: 2048576
                          description: "File size in bytes"
                        fileSizeFormatted:
                          type: string
                          example: "2.0 MB"
                        mimeType:
                          type: string
                          example: "audio/wav"
                        duration:
                          type: number
                          example: 45.2
                          description: "**AUTO-DETECTED** Duration in seconds"
                        durationFormatted:
                          type: string
                          example: "0:45"
                          description: "**AUTO-GENERATED** Human-readable duration"
                        fileUrl:
                          type: string
                          example: "https://api.suatalk.site/uploads/audio/audio-1672678123456-abc123.wav"
                        babyId:
                          type: string
                          example: "507f1f77bcf86cd799439010"
                        analysisStatus:
                          type: string
                          example: "pending"
                          enum: [pending, processing, completed, failed]
                        audioMetadata:
                          type: object
                          description: "**AUTO-DETECTED** Audio technical metadata"
                          properties:
                            sampleRate:
                              type: integer
                              example: 44100
                              description: "Sample rate in Hz"
                            bitRate:
                              type: integer
                              example: 320000
                              description: "Bitrate in bps"
                            channels:
                              type: integer
                              example: 1
                              description: "Number of channels (1=mono, 2=stereo)"
                            encoding:
                              type: string
                              example: "PCM"
                              description: "Audio encoding format"
                        metadataAutoDetected:
                          type: boolean
                          example: true
                          description: "Whether metadata was successfully auto-detected"
                        recordingContext:
                          type: object
                          nullable: true
                        uploadedAt:
                          type: string
                          format: date-time
                          example: "2024-01-15T18:35:00.000Z"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2024-01-15T18:35:00.000Z"
                        analysis:
                          type: object
                          properties:
                            queued:
                              type: boolean
                              example: true
                              description: "Whether ML analysis was automatically queued"
                            queuedAt:
                              type: string
                              format: date-time
                              nullable: true
                              example: "2024-01-15T18:35:30.000Z"
                            status:
                              type: string
                              example: "pending"
      '400':
        $ref: '../responses/common.yaml#/BadRequest'
      '401':
        $ref: '../responses/common.yaml#/Unauthorized'
      '404':
        description: Baby not found
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Baby not found or access denied"
                error:
                  type: string
                  example: "BABY_NOT_FOUND"
      '413':
        $ref: '../responses/common.yaml#/PayloadTooLarge'
      '429':
        $ref: '../responses/common.yaml#/TooManyRequests'
      '500':
        $ref: '../responses/common.yaml#/InternalServerError'

/audio/recordings:
  get:
    tags:
      - Audio
    summary: Get all audio recordings
    description: "Retrieve all audio recordings for the authenticated user with optional filtering."
    security:
      - bearerAuth: []
    parameters:
      - name: babyId
        in: query
        description: "Filter recordings by baby ID"
        required: false
        schema:
          type: string
          example: "507f1f77bcf86cd799439011"
      - name: status
        in: query
        description: "Filter by analysis status"
        required: false
        schema:
          type: string
          enum: [pending, processing, completed, failed]
          example: "completed"
      - name: page
        in: query
        description: "Page number for pagination"
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
      - name: limit
        in: query
        description: "Number of recordings per page"
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 50
          default: 20
      - name: sortBy
        in: query
        description: "Sort recordings by field"
        required: false
        schema:
          type: string
          enum: [uploadedAt, recordingDate, title]
          default: "uploadedAt"
      - name: sortOrder
        in: query
        description: "Sort order"
        required: false
        schema:
          type: string
          enum: [asc, desc]
          default: "desc"
    responses:
      '200':
        description: Audio recordings retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: array
                  items:
                    $ref: '../schemas/audio.yaml#/AudioRecording'
                pagination:
                  $ref: '../schemas/common.yaml#/PaginationInfo'
                filters:
                  type: object
                  properties:
                    babyId:
                      type: string
                    status:
                      type: string
      '401':
        $ref: '../responses/common.yaml#/Unauthorized'
      '429':
        $ref: '../responses/common.yaml#/TooManyRequests'

/audio/recordings/{id}:
  get:
    tags:
      - Audio
    summary: Get audio recording by ID
    description: "Retrieve a specific audio recording with analysis results."
    security:
      - bearerAuth: []
    parameters:
      - name: id
        in: path
        description: "Audio recording ID"
        required: true
        schema:
          type: string
          example: "507f1f77bcf86cd799439011"
    responses:
      '200':
        description: Audio recording retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../schemas/audio.yaml#/AudioRecordingWithAnalysis'
      '401':
        $ref: '../responses/common.yaml#/Unauthorized'
      '403':
        $ref: '../responses/common.yaml#/Forbidden'
      '404':
        $ref: '../responses/common.yaml#/NotFound'
      '429':
        $ref: '../responses/common.yaml#/TooManyRequests'

  delete:
    tags:
      - Audio
    summary: Delete audio recording
    description: "Delete an audio recording and its associated file."
    security:
      - bearerAuth: []
    parameters:
      - name: id
        in: path
        description: "Audio recording ID"
        required: true
        schema:
          type: string
          example: "507f1f77bcf86cd799439011"
    responses:
      '200':
        description: Audio recording deleted successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Audio recording deleted successfully"
                data:
                  type: object
                  properties:
                    deletedRecording:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "507f1f77bcf86cd799439011"
                        filename:
                          type: string
                          example: "audio-recording.wav"
                        deletedAt:
                          type: string
                          format: date-time
      '401':
        $ref: '../responses/common.yaml#/Unauthorized'
      '404':
        $ref: '../responses/common.yaml#/NotFound'
      '429':
        $ref: '../responses/common.yaml#/TooManyRequests'

/audio/stream/{id}:
  get:
    tags:
      - Audio
    summary: Stream audio recording
    description: |
      Stream an audio recording file with proper CORS support for web players.
      This endpoint handles range requests for audio seeking and provides 
      appropriate headers for cross-origin audio playback.
    security:
      - bearerAuth: []
    parameters:
      - name: id
        in: path
        description: "Audio recording ID"
        required: true
        schema:
          type: string
          example: "507f1f77bcf86cd799439011"
      - name: Range
        in: header
        description: "HTTP Range header for partial content requests"
        required: false
        schema:
          type: string
          example: "bytes=0-1023"
    responses:
      '200':
        description: Audio file streamed successfully
        headers:
          Content-Type:
            description: "Audio MIME type"
            schema:
              type: string
              example: "audio/mpeg"
          Content-Length:
            description: "File size in bytes"
            schema:
              type: integer
              example: 1048576
          Accept-Ranges:
            description: "Indicates range request support"
            schema:
              type: string
              example: "bytes"
          Cache-Control:
            description: "Cache control headers"
            schema:
              type: string
              example: "private, max-age=3600"
          Access-Control-Allow-Origin:
            description: "CORS allowed origins"
            schema:
              type: string
              example: "*"
          Access-Control-Allow-Credentials:
            description: "CORS credentials support"
            schema:
              type: string
              example: "true"
        content:
          audio/mpeg:
            schema:
              type: string
              format: binary
          audio/wav:
            schema:
              type: string
              format: binary
          audio/ogg:
            schema:
              type: string
              format: binary
          audio/webm:
            schema:
              type: string
              format: binary
      '206':
        description: Partial content (range request)
        headers:
          Content-Range:
            description: "Range of bytes being served"
            schema:
              type: string
              example: "bytes 0-1023/2048576"
          Content-Length:
            description: "Size of the partial content"
            schema:
              type: integer
              example: 1024
          Content-Type:
            description: "Audio MIME type"
            schema:
              type: string
              example: "audio/mpeg"
        content:
          audio/mpeg:
            schema:
              type: string
              format: binary
      '302':
        description: Redirect to signed URL (for cloud storage)
        headers:
          Location:
            description: "Signed URL for direct access"
            schema:
              type: string
              example: "https://storage.example.com/audio-file.wav?signature=..."
      '401':
        $ref: '../responses/common.yaml#/Unauthorized'
      '404':
        $ref: '../responses/common.yaml#/NotFound'
      '429':
        $ref: '../responses/common.yaml#/TooManyRequests'

/audio/pending-analysis:
  get:
    tags:
      - Audio
    summary: Get pending analysis recordings
    description: "Retrieve audio recordings that are pending ML analysis for the user."
    security:
      - bearerAuth: []
    parameters:
      - name: limit
        in: query
        description: "Maximum number of pending recordings to return"
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 50
    responses:
      '200':
        description: Pending recordings retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: array
                  items:
                    $ref: '../schemas/audio.yaml#/AudioRecording'
                count:
                  type: integer
                  example: 5
                  description: "Number of pending recordings"
      '401':
        $ref: '../responses/common.yaml#/Unauthorized'
      '429':
        $ref: '../responses/common.yaml#/TooManyRequests'

/audio/batch-analyze:
  post:
    tags:
      - Audio
    summary: Trigger batch ML analysis
    description: |
      Trigger ML analysis for multiple recordings or all pending recordings.
      Analysis will be performed asynchronously in the background.
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              recordingIds:
                type: array
                maxItems: 20
                items:
                  type: string
                example: ["507f1f77bcf86cd799439011", "507f1f77bcf86cd799439012"]
                description: "Array of recording IDs to analyze (max 20)"
              analyzeAllPending:
                type: boolean
                example: false
                description: "Set to true to analyze all pending recordings"
            oneOf:
              - required: [recordingIds]
              - required: [analyzeAllPending]
    responses:
      '202':
        description: Batch analysis triggered successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Batch analysis triggered for 5 recordings"
                data:
                  type: object
                  properties:
                    jobId:
                      type: string
                      example: "batch_analysis_abc123"
                    recordingCount:
                      type: integer
                      example: 5
                    estimatedCompletionTime:
                      type: string
                      format: date-time
                      example: "2024-01-15T19:00:00.000Z"
      '400':
        $ref: '../responses/common.yaml#/BadRequest'
      '401':
        $ref: '../responses/common.yaml#/Unauthorized'
      '429':
        $ref: '../responses/common.yaml#/TooManyRequests'

/audio/cleanup:
  post:
    tags:
      - Audio
    summary: Cleanup orphaned audio files
    description: |
      Maintenance endpoint to cleanup orphaned audio files that exist in storage 
      but have no corresponding database records.
    security:
      - bearerAuth: []
    requestBody:
      required: false
      content:
        application/json:
          schema:
            type: object
            properties:
              dryRun:
                type: boolean
                default: true
                example: true
                description: "If true, only reports what would be cleaned without deleting"
              olderThanDays:
                type: integer
                minimum: 1
                default: 7
                example: 30
                description: "Only cleanup files older than this many days"
    responses:
      '200':
        description: Cleanup operation completed
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Cleanup completed"
                data:
                  type: object
                  properties:
                    filesFound:
                      type: integer
                      example: 12
                    filesDeleted:
                      type: integer
                      example: 8
                    spaceSaved:
                      type: string
                      example: "145.2 MB"
                    dryRun:
                      type: boolean
                      example: false
      '401':
        $ref: '../responses/common.yaml#/Unauthorized'
      '429':
        $ref: '../responses/common.yaml#/TooManyRequests' 